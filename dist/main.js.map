{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js_project/./node_modules/@kurkle/color/dist/color.esm.js","webpack://js_project/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://js_project/./node_modules/chart.js/dist/chart.js","webpack://js_project/./node_modules/chart.js/auto/auto.js","webpack://js_project/./src/scripts/data_chart.js","webpack://js_project/./src/index.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.2.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.2.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.2.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import Chart from 'chart.js/auto'\n\n\n// const apiURL = \"https://api.nytimes.com/svc/books/v3/lists.json?api-key=73W0ByfNVTxMkbhcn7rMWYUVQGPDej9z&list=hardcover-fiction\";\n\n// let ctx = document.getElementById(\"book-chart\");\n\n// let list = [];\n// let booksArray = [];\n// let weeksArray = []; \n\n\n// async function fetchData() {\n//     let response = await fetch(apiURL);\n//     if (response.ok) {\n//         let body = await response.json();\n//         list = body.results;\n//     } else {\n//         console.log(\"Something went wrong\");\n//     }\n// }\n\n// async function bookList() {\n//     await fetchData();\n//     booksArray = list.map(book => book.book_details[0].title);\n// }\n\n// bookList();\n   \n\n// console.log(books());\n\n// const books = [\"book1\", \"book2\", \"book3\", \"book4\", \"book5\", \"book6\", \"book7\", \"book8\", \"book9\", \"book10\", \"book11\", \"book12\", \"book13\", \"book14\", \"book15\"];\n// const weeks = [5, 4, 1, 9, 70, 8, 2, 4, 5, 2, 15, 7, 10, 4, 15];\n\n\nfunction bookFunction(ctx, labels, data) {\n    const bookChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n            labels: labels,\n            datasets: [{\n                label: 'Weeks on Bestseller List',\n                data: data,\n                // backgroundColor: [\n                //     \"rgba(255, 99, 132, 0.2)\",\n                //     \"rgba(54, 162, 235, 0.2)\",\n                //     \"rgba(255, 206, 86, 0.2)\",\n                //     \"rgba(75, 192, 192, 0.2)\",\n                //     \"rgba(153, 102, 255, 0.2)\"\n                //     ],\n                borderColor: [\n                    \"rgb(0, 0, 0)\"\n                    ],\n                    borderWidth: 1\n            }]\n        }\n    })\n}\n\n\n\n\n\n// async function bookFunction() {\n//     await fetchData();\n//     booksArray = list.map(book => book.book_details[0].title);\n//     weeksArray = list.map(week => week.weeks_on_list);\n//     const bookChart = new Chart(ctx, {\n//         type: 'bar',\n//         data: {\n//             labels: booksArray,\n//             datasets: [{\n//                 label: 'Weeks on Bestseller List',\n//                 data: weeksArray,\n//                 backgroundColor: [\n//                     \"rgba(255, 99, 132, 0.2)\",\n//                     \"rgba(54, 162, 235, 0.2)\",\n//                     \"rgba(255, 206, 86, 0.2)\",\n//                     \"rgba(75, 192, 192, 0.2)\",\n//                     \"rgba(153, 102, 255, 0.2)\"\n//                     ],\n//                 borderColor: [\n//                     \"rgba(255, 99, 132, 1)\",\n//                     \"rgba(54, 162, 235, 1)\",\n//                     \"rgba(255, 206, 86, 1)\",\n//                     \"rgba(75, 192, 192, 1)\",\n//                     \"rgba(153, 102, 255, 1)\",\n//                     ],\n//                     borderWidth: 1\n//             }]\n//         }\n//     })\n// }\n\n\n\n\nexport default bookFunction","\n\nimport bookFunction from \"./scripts/data_chart\";\n// console.log(bookChart);\n// import Chart from 'chart.js/auto'\n\n\nconst apiURL = \"https://api.nytimes.com/svc/books/v3/lists.json?api-key=73W0ByfNVTxMkbhcn7rMWYUVQGPDej9z\";\n\n// const dateURL = \"https://api.nytimes.com/svc/books/v3/lists/2023-03-19/hardcover-fiction.json?api-key=73W0ByfNVTxMkbhcn7rMWYUVQGPDej9z\";\n\n// async function notARealFunction() {\n//     let dateResponse = await fetch(dateURL);\n//     if (dateResponse.ok) {\n//         console.log(dateResponse);\n//     }\n// }\n\n// notARealFunction();\n\nlet list = [];\nlet booksArray = [];\nlet weeksArray = [];\n\nlet listName = \"\";\n\nlet dateOutput;\n\n// let searchInput = document.querySelector(\"#search-input\");\nlet dateInput = document.getElementById(\"date-input\");\ndateInput.addEventListener('input', e => {\n    e.preventDefault();\n    dateOutput = e.target.value;\n})\n\n\n// if e.target.value is true, use value in url, else use 'current'\n\nlet mainContainer = document.querySelector(\"main\");\nlet canvasContainer = document.getElementById(\"canvas-container\");\n\ncanvasContainer.classList.add(\"hidden\");\n\nlet listUrl = \"\";\n\nasync function fetchData() {\n    let response = await fetch(listUrl);\n    if (response.ok) {\n        let body = await response.json();\n        list = body.results;\n    }\n    else {\n        console.log(\"something went wrong\")\n        }\n}\n\nfunction createList() {\n    list.forEach(result => {\n        let listDiv = document.createElement(\"div\");\n        listDiv.classList.add(\"list-div\");\n        let listTitle = document.createElement(\"h1\");\n        listTitle.classList.add(\"list-title\");\n        let listAuthor = document.createElement(\"p\");\n        listAuthor.classList.add(\"list-author\");\n        let listDescription = document.createElement(\"p\");\n        listDescription.classList.add(\"list-description\");\n        listTitle.innerHTML = result.book_details[0].title;\n        listAuthor.innerHTML = `by ${result.book_details[0].author}`;\n        listDescription.innerHTML = result.book_details[0].description;\n        listDiv.appendChild(listTitle);\n        listDiv.appendChild(listAuthor);\n        listDiv.appendChild(listDescription);\n        mainContainer.appendChild(listDiv);\n    })\n}\n\nfunction createCanvas() {\n    while (canvasContainer.firstChild) {\n        canvasContainer.removeChild(canvasContainer.firstChild);\n    }\n    \n    let canvas = document.createElement(\"canvas\");\n    canvas.setAttribute('id', 'book-chart');\n    canvasContainer.appendChild(canvas);\n    return canvas;\n}\n\n\n\n\nlet hardcoverFictionButton = document.getElementById(\"hardcover-fiction-button\")\nhardcoverFictionButton.addEventListener('click', async e => {\n    listName = \"list=hardcover-fiction\";\n    if (dateOutput) {\n        listUrl = `${apiURL}&${listName}&published-date=${dateOutput}`;\n    } else {\n        listUrl = `${apiURL}&${listName}`;\n    }\n    \n    \n    while (mainContainer.firstChild) {\n        mainContainer.removeChild(mainContainer.firstChild);\n    }\n        e.preventDefault();\n        await fetchData();\n\n        let canvas = createCanvas();\n        // createCanvas();\n\n        booksArray = list.map(book => book.book_details[0].title);\n        weeksArray = list.map(week => week.weeks_on_list);\n        bookFunction(canvas, booksArray, weeksArray);\n        \n\n        let ListHeader = document.createElement(\"h1\");\n        ListHeader.classList.add(\"list-header\");\n        ListHeader.innerHTML = list[0].display_name;\n        mainContainer.appendChild(ListHeader);\n        createList();\n})\n\nlet paperbackFictionButton = document.getElementById(\"paperback-fiction-button\")\npaperbackFictionButton.addEventListener('click', async e => {\n    listName = \"list=trade-fiction-paperback\";\n\n    if (dateOutput) {\n        listUrl = `${apiURL}&${listName}&published-date=${dateOutput}`;\n    } else {\n        listUrl = `${apiURL}&${listName}`;\n    }\n\n    while (mainContainer.firstChild) {\n        mainContainer.removeChild(mainContainer.firstChild);\n    }\n        e.preventDefault();\n        await fetchData();\n\n        let canvas = createCanvas();\n\n        booksArray = list.map(book => book.book_details[0].title);\n        weeksArray = list.map(week => week.weeks_on_list);\n        bookFunction(canvas, booksArray, weeksArray);\n\n        let ListHeader = document.createElement(\"h1\");\n        ListHeader.classList.add(\"list-header\");\n        ListHeader.innerHTML = list[0].display_name;\n        mainContainer.appendChild(ListHeader);\n        createList();\n})\n\nlet hardcoverNonfictionButton = document.getElementById(\"hardcover-nonfiction-button\")\nhardcoverNonfictionButton.addEventListener('click', async e => {\n    listName = \"list=hardcover-nonfiction\";\n\n    if (dateOutput) {\n        listUrl = `${apiURL}&${listName}&published-date=${dateOutput}`;\n    } else {\n        listUrl = `${apiURL}&${listName}`;\n    }\n\n    while (mainContainer.firstChild) {\n        mainContainer.removeChild(mainContainer.firstChild);\n    }\n        e.preventDefault();\n        await fetchData();\n\n        let canvas = createCanvas();\n\n        booksArray = list.map(book => book.book_details[0].title);\n        weeksArray = list.map(week => week.weeks_on_list);\n        bookFunction(canvas, booksArray, weeksArray);\n\n        let ListHeader = document.createElement(\"h1\");\n        ListHeader.classList.add(\"list-header\");\n        ListHeader.innerHTML = list[0].display_name;\n        mainContainer.appendChild(ListHeader);\n        createList();\n})\n\nlet paperbackNonfictionButton = document.getElementById(\"paperback-nonfiction-button\")\npaperbackNonfictionButton.addEventListener('click', async e => {\n    listName = \"list=paperback-nonfiction\";\n\n    if (dateOutput) {\n        listUrl = `${apiURL}&${listName}&published-date=${dateOutput}`;\n    } else {\n        listUrl = `${apiURL}&${listName}`;\n    }\n\n    while (mainContainer.firstChild) {\n        mainContainer.removeChild(mainContainer.firstChild);\n    }\n        e.preventDefault();\n        await fetchData();\n\n        let canvas = createCanvas();\n\n        booksArray = list.map(book => book.book_details[0].title);\n        weeksArray = list.map(week => week.weeks_on_list);\n        bookFunction(canvas, booksArray, weeksArray);\n\n        let ListHeader = document.createElement(\"h1\");\n        ListHeader.classList.add(\"list-header\");\n        ListHeader.innerHTML = list[0].display_name;\n        mainContainer.appendChild(ListHeader);\n        createList();\n})\n\nlet adviceButton = document.getElementById(\"advice-button\")\nadviceButton.addEventListener('click', async e => {\n    listName = \"list=advice-how-to-and-miscellaneous\";\n\n    if (dateOutput) {\n        listUrl = `${apiURL}&${listName}&published-date=${dateOutput}`;\n    } else {\n        listUrl = `${apiURL}&${listName}`;\n    }\n\n    while (mainContainer.firstChild) {\n        mainContainer.removeChild(mainContainer.firstChild);\n    }\n        e.preventDefault();\n        await fetchData();\n\n        let canvas = createCanvas();\n\n        booksArray = list.map(book => book.book_details[0].title);\n        weeksArray = list.map(week => week.weeks_on_list);\n        bookFunction(canvas, booksArray, weeksArray);\n\n        let ListHeader = document.createElement(\"h1\");\n        ListHeader.classList.add(\"list-header\");\n        ListHeader.innerHTML = list[0].display_name;\n        mainContainer.appendChild(ListHeader);\n        createList();\n})\n\nlet midGradeHardcoverButton = document.getElementById(\"mid-grade-hardcover-button\")\nmidGradeHardcoverButton.addEventListener('click', async e => {\n    listName = \"list=childrens-middle-grade-hardcover\";\n\n    if (dateOutput) {\n        listUrl = `${apiURL}&${listName}&published-date=${dateOutput}`;\n    } else {\n        listUrl = `${apiURL}&${listName}`;\n    }\n\n    while (mainContainer.firstChild) {\n        mainContainer.removeChild(mainContainer.firstChild);\n    }\n        e.preventDefault();\n        await fetchData();\n\n        let canvas = createCanvas();\n\n        booksArray = list.map(book => book.book_details[0].title);\n        weeksArray = list.map(week => week.weeks_on_list);\n        bookFunction(canvas, booksArray, weeksArray);\n\n        let ListHeader = document.createElement(\"h1\");\n        ListHeader.classList.add(\"list-header\");\n        ListHeader.innerHTML = list[0].display_name;\n        mainContainer.appendChild(ListHeader);\n        createList();\n})\n\nlet pictureBookButton = document.getElementById(\"picture-book-button\")\npictureBookButton.addEventListener('click', async e => {\n    listName = \"list=picture-books\";\n\n    if (dateOutput) {\n        listUrl = `${apiURL}&${listName}&published-date=${dateOutput}`;\n    } else {\n        listUrl = `${apiURL}&${listName}`;\n    }\n\n    while (mainContainer.firstChild) {\n        mainContainer.removeChild(mainContainer.firstChild);\n    }\n        e.preventDefault();\n        await fetchData();\n\n        let canvas = createCanvas();\n\n        booksArray = list.map(book => book.book_details[0].title);\n        weeksArray = list.map(week => week.weeks_on_list);\n        bookFunction(canvas, booksArray, weeksArray);\n\n        let ListHeader = document.createElement(\"h1\");\n        ListHeader.classList.add(\"list-header\");\n        ListHeader.innerHTML = list[0].display_name;\n        mainContainer.appendChild(ListHeader);\n        createList();\n})\n\nlet childrenSeries = document.getElementById(\"children-series-button\")\nchildrenSeries.addEventListener('click', async e => {\n    listName = \"list=series-books\";\n\n    if (dateOutput) {\n        listUrl = `${apiURL}&${listName}&published-date=${dateOutput}`;\n    } else {\n        listUrl = `${apiURL}&${listName}`;\n    }\n    \n    while (mainContainer.firstChild) {\n        mainContainer.removeChild(mainContainer.firstChild);\n    }\n        e.preventDefault();\n        await fetchData();\n\n        let canvas = createCanvas();\n\n        booksArray = list.map(book => book.book_details[0].title);\n        weeksArray = list.map(week => week.weeks_on_list);\n        bookFunction(canvas, booksArray, weeksArray);\n\n        let ListHeader = document.createElement(\"h1\");\n        ListHeader.classList.add(\"list-header\");\n        ListHeader.innerHTML = list[0].display_name;\n        mainContainer.appendChild(ListHeader);\n        createList();\n})\n\nlet youngAdultHardcover = document.getElementById(\"ya-hardcover-button\")\nyoungAdultHardcover.addEventListener('click', async e => {\n    listName = \"list=young-adult-hardcover\";\n\n    if (dateOutput) {\n        listUrl = `${apiURL}&${listName}&published-date=${dateOutput}`;\n    } else {\n        listUrl = `${apiURL}&${listName}`;\n    }\n\n    while (mainContainer.firstChild) {\n        mainContainer.removeChild(mainContainer.firstChild);\n    }\n        e.preventDefault();\n        await fetchData();\n\n        let canvas = createCanvas();\n\n        booksArray = list.map(book => book.book_details[0].title);\n        weeksArray = list.map(week => week.weeks_on_list);\n        bookFunction(canvas, booksArray, weeksArray);\n\n        let ListHeader = document.createElement(\"h1\");\n        ListHeader.classList.add(\"list-header\");\n        ListHeader.innerHTML = list[0].display_name;\n        mainContainer.appendChild(ListHeader);\n        createList();\n})\n\n\nlet chartButton = document.getElementById(\"chart-button\");\nchartButton.addEventListener('click', e => {\n    e.preventDefault();\n    canvasContainer.classList.remove(\"hidden\");\n    mainContainer.classList.add(\"hidden\");\n})\n\nlet listButton = document.getElementById(\"list-button\");\nlistButton.addEventListener('click', e => {\n    e.preventDefault();\n    mainContainer.classList.remove(\"hidden\");\n    canvasContainer.classList.add(\"hidden\");\n})\n\n\n// CHART STUFF\n\n\n// let ctx = document.getElementById(\"book-chart\");\n\n// let books = list.map(book => {\n//     book.book_details[0].title;\n// })\n\n// const books = [\"book1\", \"book2\", \"book3\", \"book4\", \"book5\"];\n// const weeks = [5, 4, 1, 9, 24];\n\n\n// const bookChart = new Chart(ctx, {\n//     type: 'line',\n//     data: {\n//         labels: books,\n//         datasets: [{\n//             label: 'Just book stuff',\n//             data: weeks\n//             }]\n//     },\n// });\n\n\n\n\n\n\n\n\n// let searchButton = document.getElementById(\"search-button\");\n// searchButton.addEventListener('click', async e => {\n//     e.preventDefault();\n//     await fetchData();\n//     createList();\n// })\n\n\n\n\n\n// window.fetchData = fetchData;\n// window.createList = createList;"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","r","g","hueValue","calln","Array","isArray","map","hsl2rgb","hue","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","Object","assign","fromObject","input","length","functionParse","str","charAt","m","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","type","ret","len","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","nameParse","this","_rgb","_valid","valid","obj","rgbString","undefined","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","_boundSegments","segments","sub","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","aspectRatio","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_datasetIndex","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","height1","width1","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","positionAxisID1","value1","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","i1","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","angleMargin","clipArc","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","getTextAlignForAngle","yForAngle","pathRadiusLine","getPointPosition","RadialLinearScale","animate","centerPointLabels","drawingArea","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","additionalAngle","getPointLabelContext","plFont","setCenterPoint","extra","outerDistance","pointLabelPosition","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","apiURL","dateOutput","list","booksArray","weeksArray","listName","preventDefault","mainContainer","querySelector","canvasContainer","classList","listUrl","async","fetchData","response","fetch","json","results","log","createList","listDiv","createElement","listTitle","listAuthor","listDescription","innerHTML","book_details","author","description","appendChild","createCanvas","firstChild","removeChild","book","weeks_on_list","bookFunction","ListHeader","display_name"],"sourceRoot":""}